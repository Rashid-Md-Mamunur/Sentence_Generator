function query=GenerateQuestion(truefalse)%% By Steven Dakin, UCL IoO, 2009 (s.dakin@ucl.ac.uk)% if ~exist('truefalse')     truefalse=1; end    GenerateGenStructureUS; % makes grammar	questions=[{'some' 'no'}]; % two types of query	whichquestion=whichquestion+1; 	PosAssert=object(:,2); %a	Nouns=object(:,1); %b	NegAssert=object(:,3);	%c	runningot=1;	truerunningot=1;	for i=1:NoObjects		oblist1=object(ObjectNo,name);		noprops=length([PosAssert{i,1}])*length([Nouns{i,1}]);		PosProps(runningot:runningot+noprops-1)=i;		runningot=runningot+noprops;		truerunningot=truerunningot+noprops+(length([NegAssert{i,1}])*length([Nouns{i,1}]));	end	NumberProps=runningot;	qasked=1;	while qasked		poss=0;		while (poss==0)			ObjectNo=PosProps(1+floor(rand*NumberProps));			Qtype1=1+floor(rand*2);			if truefalse Qtype2=Qtype1;			else Qtype2=1+(1-(Qtype1-1)); 			end			proplist1=object(ObjectNo,Qtype2+1);			proplist2=proplist1{1};			poss=length(proplist2);			oblist1=object(ObjectNo,name);			oblist2=oblist1{1};			poss2=length(oblist2);		end		inst=1+floor(rand*poss);		inst2=1+floor(rand*poss2);		qasked=0;	end	qlist(whichquestion,:)=[ObjectNo Qtype2 inst];	property=proplist2{inst};	if (iscellstr(oblist1))		this_object=oblist2;	else		this_object=oblist2{inst2};	end	if truefalse tf=sprintf('True'); else tf=sprintf('False'); end;	query=sprintf('%s %s %s',char(questions(Qtype1)),char(this_object),char(property));	StartsNo=findstr('no ',query(1:2));	NegStatement=findstr('n''t',query);	if (NegStatement&StartsNo)		query2=sprintf('all%s %s',query(3:NegStatement(1)-1),query(NegStatement(1)+4:length(query)));		query=query2;		fprintf(1,'"nt" Double negative corrected %s',query);	end	NeverStatement=findstr('never',query);	if (NeverStatement&StartsNo)		query2=sprintf('all%ssometimes %s',query(3:NeverStatement(1)-1),query(NeverStatement(1)+6:length(query)));		query=query2;		fprintf(1,'"never" Double negative corrected %s',query);	end